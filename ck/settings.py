"""
Django settings for ck project.

Generated by 'django-admin startproject' using Django 3.0.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import environ
from .django_secret_key import key
# from configparser import RawConfigParser

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = key

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'songs',
    'django_crontab'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'ck.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'ck.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static')
]

# Define CRONJOBS
# output to log
CRONJOBS = [
    ('0 0 * * 0', 'ck.cron.check_for_update', '>>' + os.path.join(BASE_DIR, 'cronjob.log')),
    ('0 0 * * 0', 'ck.cron.update', '>>' + os.path.join(BASE_DIR, 'cronjob.log')),
    ('0 0 * * 3', 'ck.cron.remove_csv_data', '>>' + os.path.join(BASE_DIR, 'cronjob.log')),
]

# Redirect CRONJOBS' output to stdout and stderr
CRONTAB_COMMAND_SUFFIX = '2>&1'

# # Parsing Environment Variable
# # config = RawConfigParser()
# # config.read(os.path.join(BASE_DIR, 'songs/settings.ini'))
# #
# # # SPOTIPY_CLIENT_ID = '105bd1d9a81a497ca0e285637409dd59'
# # # SPOTIPY_CLIENT_SECRET = config.get('spotify', 'SPOTIPY_CLIENT_SECRET')
# #
# # SPOTIPY_CLIENT_ID = config.get('spotify', 'SPOTIPY_CLIENT_ID')
# # SPOTIPY_CLIENT_SECRET = config.get('spotify', 'SPOTIPY_CLIENT_SECRET')
#
# env = environ.Env()
# env.read_env()
# SPOTIPY_CLIENT_ID = env('SPOTIPY_CLIENT_ID')
# SPOTIPY_CLIENT_SECRET = env('SPOTIPY_CLIENT_SECRET')
# SPOTIPY_REDIRECT_URI = env('SPOTIPY_REDIRECT_URI')
